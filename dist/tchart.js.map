{"version":3,"sources":["../tchart.js"],"names":["TChart","requestAnimationFrame","window","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","cancelAnimationFrame","mozCancelAnimationFrame","colorsMap","day","background","XYAxisLabels","gridBottomBorder","gridLine","zoomOverlay","zoomCarriageTool","verticalInfoLine","pointsInfoBackground","pointsInfoTitle","legendItemBorder","legendItemName","night","X_COLUMN_TYPE","LINE_COLUMN_TYPE","MONTH_NAMES","config","nightMode","containerId","rerender","fullrerender","addEventListener","generateId","Math","random","toString","substr","addEventListeners","el","events","listener","opts","eventsList","split","i","length","style","obj","Object","entries","reduce","styleString","propName","propValue","replace","matches","toLowerCase","HTMLComponent","CREATED","_id","_events","parent","data","Error","newData","event","handler","once","values","EVENTS","includes","push","where","whenCreate","html","_wrap","render","on","_postCreate","bind","insertAdjacentHTML","remove","document","getElementById","innerHTML","_raiseEvent","whenRendered","whenCreated","eventName","forEach","template","NAME","CanvasHTMLComponent","ctx2d","clearRect","width","height","clientWidth","clientHeight","dpr","devicePixelRatio","canvasRect","getBoundingClientRect","getContext","scale","XAxisLayer","className","chartData","clear","_renderXAxisDates","font","fillStyle","getColor","textBaseline","labelOccupiedWidth","bypassXPoints","drawingFrame","xData","minValX","maxValX","v","x","date","Date","label","getMonth","getDate","labelWidth","measureText","labelMidWidth","labelX","labelXEnd","fillText","YAxisLayer","_prevMaxY","_anim","Animation","_frameAnimHandler","increase","maxY","undefined","start","layer","anim","ctx","minY","stepValY","yAxis","grid","horizontalLines","stepHrzLine","y","maxShift","onFinished","initY","animY","easeOutExpo","progress","duration","beginPath","lineWidth","strokeStyle","moveTo","lineTo","stroke","toHumanValue","_renderXYAxisLabels","call","PointsInfoHTMLComponent","_values","weekDay","DAY_NAMES","getDay","month","map","yVal","lineName","color","join","backgroundColor","onMouseOut","left","right","top","InfoLayer","_chartData","_pointsInfo","_mouseMoveHandler","_mouseOutHandler","e","stopPropagation","relatedTarget","parentElementsHierarchy","currXPos","points","lineIndex","leftPointMidDist","rightPointMidDist","_firstPoint","create","parentElement","addVal","yDatas","names","colors","setPosition","arc","PI","fill","drawPlot","_showInfo","layerX","PlotLayer","renderedChartData","animate","drawingPlotFunc","yr","prevY","ZoomCarriage","_currVisibilityFrame","_moveIsActive","_startStretchXPos","_initProps","_leftStretch","_rightStretch","_leftStretchIsActive","_rightStretchIsActive","visibilityFrame","borderTopColor","borderBottomColor","getElementsByClassName","_windowMouseMoveHandler","_windowMouseUpHandler","_mouseDownHandler","_stretchMouseDownHandler","whenVisibilityChanged","parseFloat","screenX","TouchEvent","changedTouches","dist","_move","_moveLeftStretch","_moveRightStretch","touches","getRightShift","target","offsetLeft","newRight","_setProps","newWidth","from","to","ZoomPlot","Zoom","_plot","_overlay","_zoomCarriage","_whenVisibilityChanged","_renderOverlay","fillRect","zoomCarriageRightShift","LegendItem","_lineIndex","_visible","name","styleObj","borderColor","maskImage","webkitMaskImage","visible","whenStateChanged","Legend","_lines","legendItem","whenLegendItemStateChanged","Chart","_yAxisLayer","_xAxisLayer","_plotLayer","_infoLayer","_zoom","_legend","currVisibilityFrame","visibilityChangedTimer","lastVisibleChartData","_render","clearTimeout","setTimeout","zoom","addLine","recalculateMinMaxY","xl","visibleXData","slice","minMaxValX","minMax","visibleChartData","visibleData","pointsYLen","mm","min","max","configure","setData","switchMode","isNightMode","val","assign","Array","isArray","TypeError","text","fontSize","fontFamily","prepareChartData","minMaxXData","columnIndex","columns","columnData","columnName","columnType","types","yData","minMaxYData","chartsContainer","body","canvas","callback","compressionRatioX","areaMetric","drawingFunc","compressionRatioY","yIndex","frameHandler","reqAnimId","onFinishedCallback","context","startAnimTime","frame","timestamp","t","b","c","d","pow","toFixed","parents"],"mappings":"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","sourcesContent":["const TChart = (\n() => {\n    let requestAnimationFrame = window.requestAnimationFrame\n        || window.mozRequestAnimationFrame\n        ||  window.webkitRequestAnimationFrame\n        || window.msRequestAnimationFrame,\n\n        cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame;\n\n    let colorsMap = {\n        day: {\n            background: '#FFF',\n            XYAxisLabels: '#A1ACB3',\n            gridBottomBorder: '#cacccd',\n            gridLine: '#d4d6d7',\n            zoomOverlay: 'rgba(239,243,245,0.5)',\n            zoomCarriageTool: 'rgba(218,231,240,0.5)',\n            verticalInfoLine: '#CBCFD2',\n            pointsInfoBackground: '#FFF',\n            pointsInfoTitle: '#000',\n            legendItemBorder: '#EFF3F5',\n            legendItemName: '#000',\n        },\n        night: {\n            background: '#242F3E',\n            XYAxisLabels: '#546778',\n            gridBottomBorder: '#495564',\n            gridLine: '#303D4C',\n            zoomOverlay: 'rgba(27,36,48,0.5)',\n            zoomCarriageTool: 'rgba(81,101,120,0.5)',\n            verticalInfoLine: '#4e5a69',\n            pointsInfoBackground: '#253241',\n            pointsInfoTitle: '#FFF',\n            legendItemBorder: '#495564',\n            legendItemName: '#FFF',\n        }\n    };\n\n    /**\n     * @const {string}\n     */\n    let X_COLUMN_TYPE = 'x',\n        LINE_COLUMN_TYPE = 'line',\n        MONTH_NAMES = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n    let config = {\n        nightMode: false,\n        containerId: 'charts-container'\n    };\n\n    let rerender, fullrerender;\n\n    window.addEventListener('resize', function() {\n        fullrerender();\n    });\n\n    function generateId() {\n      return Math.random().toString(36).substr(2, 9);\n    }\n\n    function addEventListeners (el, events, listener, opts) {\n        let eventsList = events.split(' ');\n        for (let i = 0; i < eventsList.length; i++) {\n            el.addEventListener(eventsList[i], listener, opts)\n        }\n    }\n\n    function style (obj) {\n        return Object.entries(obj).reduce((styleString, [propName, propValue]) => {\n            propName = propName.replace(/([A-Z])/g, matches => `-${matches[0].toLowerCase()}`);\n            return `${styleString}${propName}:${propValue};`;\n        }, '')\n    }\n\n    class HTMLComponent {\n        NAME = null;\n        EVENTS = {\n            CREATED: 'created'\n        };\n\n        constructor() {\n            this._id = null;\n            this._events = [];\n            this.el = null;\n            this.rerender = null;\n            this.parent = null;\n        }\n\n        render(data) {\n            throw new Error()\n        }\n\n        rerender(newData) {\n            throw new Error()\n        }\n\n        on (event, handler, once) {\n            once = once || false;\n\n            if (!Object.values(this.EVENTS).includes(event)) {\n                throw new Error(`The event \"${event}\" is not supported`)\n            }\n            this._events.push({event, handler, once})\n        }\n\n        whenCreated(el, data) {}\n\n        whenCreate() {}\n\n        whenRendered(el, data) {}\n\n        create (parent, data, where) {\n            this.whenCreate();\n\n            let html = this._wrap(this.render(data));\n            if (parent instanceof HTMLComponent) {\n                this.parent = parent;\n                parent.on(this.EVENTS.CREATED, this._postCreate.bind(this, data));\n                return html\n\n            } else {\n                where = where || 'beforeEnd';\n                parent.insertAdjacentHTML(where, html);\n                this._postCreate(data)\n            }\n            return this.el\n        }\n\n        remove() {\n            if (this.el) {\n                this.el.remove();\n                this.el = null;\n            }\n        }\n\n        _postCreate (data) {\n            this.el = document.getElementById(this._id);\n\n            this.rerender = (newData) => {\n                data = newData || data;\n\n                let html = this.render(data);\n                this.el.innerHTML = html;\n                this._raiseEvent(this.EVENTS.CREATED, data);\n                this.whenRendered(this.el, data);\n                return html;\n            };\n            this._raiseEvent(this.EVENTS.CREATED, data);\n            this.whenCreated(this.el, data);\n            this.whenRendered(this.el, data);\n        };\n\n        _raiseEvent (eventName, data) {\n            this._events.forEach(({event, handler}) => {\n                if (event === eventName) {\n                    handler(data);\n                }\n            });\n            this._events = [];\n        }\n\n        _wrap (template) {\n            this._id = generateId();\n            return `<${this.NAME} id=\"${this._id}\">${template}</${this.NAME}>`\n        }\n    }\n\n    class CanvasHTMLComponent extends HTMLComponent {\n        NAME = 'canvas';\n\n        constructor() {\n            super();\n\n            this.ctx2d = null;\n        }\n\n        clear() {\n            this.ctx2d.clearRect(0, 0, this.el.width, this.el.height)\n        }\n\n        whenCreated (el) {\n            el.width = el.clientWidth;\n            el.height = el.clientHeight;\n\n            let dpr = window.devicePixelRatio || 1,\n                canvasRect = el.getBoundingClientRect();\n\n            el.width = canvasRect.width * dpr;\n            el.height = canvasRect.height * dpr;\n\n            this.ctx2d = el.getContext('2d');\n            this.ctx2d.scale(dpr, dpr);\n        }\n\n        render() {\n            return ''\n        }\n    }\n\n    class XAxisLayer  extends CanvasHTMLComponent {\n        whenCreated(el) {\n            super.whenCreated(el);\n\n            el.className = 'x-axis';\n        }\n\n        whenRendered(el, {chartData, opts}) {\n            this.clear();\n            this._renderXAxisDates(chartData, opts);\n        }\n\n        _renderXAxisDates (chartData, opts) {\n            this.ctx2d.font = '.7em' + ' ' + 'Arial';\n            this.ctx2d.fillStyle = getColor('XYAxisLabels');\n            this.ctx2d.textBaseline = 'bottom';\n\n            let labelOccupiedWidth = 0;\n            bypassXPoints(\n                this.el,\n                opts.drawingFrame,\n                chartData.xData,\n                chartData.minValX,\n                chartData.maxValX,\n                (v, x) => {\n                    let date = new Date(v),\n                        label = MONTH_NAMES[date.getMonth()] + ' ' + date.getDate(),\n                        labelWidth = this.ctx2d.measureText(label).width,\n                        labelMidWidth = labelWidth / 2,\n                        labelX = x - labelMidWidth,\n                        labelXEnd = x + labelMidWidth;\n\n                    if (labelOccupiedWidth <= labelX && x >= labelMidWidth && labelXEnd <= this.el.clientWidth) {\n                        labelOccupiedWidth = labelXEnd + 15; // + 15 minimal distance between labels\n\n                        this.ctx2d.fillText(label, labelX, this.el.clientHeight);\n                    }\n                }\n            );\n        }\n    }\n\n    class YAxisLayer extends CanvasHTMLComponent {\n        constructor() {\n            super();\n\n            this._prevMaxY = null;\n            this._anim = new Animation(this._frameAnimHandler);\n        }\n\n        whenCreated(el) {\n            super.whenCreated(el);\n\n            el.className = 'y-axis';\n        }\n\n        whenRendered(el, {chartData, opts}) {\n            let increase = this._prevMaxY === void 0 || chartData.maxY > this._prevMaxY\n                ? true\n                : (chartData.maxY === this._prevMaxY ? undefined : false);\n\n            // TODO: 0\n            if (0 && increase === undefined) {\n                return;\n            }\n\n            this._anim.start(\n                {\n                    layer: this,\n                    anim: this._anim,\n                    ctx: this.ctx2d,\n                    xData: chartData.xData,\n                    minY: chartData.minY,\n                    stepValY: (chartData.maxY - chartData.minY) / opts.yAxis.grid.horizontalLines,\n                    stepHrzLine: (this.el.clientHeight - opts.drawingFrame.y + opts.drawingFrame.height) / opts.yAxis.grid.horizontalLines,\n                    maxShift: 40,\n                    chartData,\n                    opts,\n                    increase,\n                }, 1000\n\n            ).onFinished(() => {\n                this._prevMaxY = chartData.maxY;\n            });\n        }\n\n        _renderXYAxisLabels () {\n            for (let i = 0, initY, animY; i < this.opts.yAxis.grid.horizontalLines; i++) {\n                initY = (i + 1) * this.stepHrzLine - 1;\n\n                if (this.increase) {\n                    animY = initY + this.maxShift - this.anim.easeOutExpo(this.progress, 0, this.maxShift, this.duration);\n                    animY = (animY < initY) ? initY : animY;\n                } else {\n                    animY = this.anim.easeOutExpo(this.progress, initY - this.maxShift, this.maxShift, this.duration);\n                    animY = (animY > initY) ? initY : animY;\n                }\n\n                this.ctx.beginPath();\n                this.ctx.lineWidth = this.opts.yAxis.grid.lineWidth;\n                this.ctx.strokeStyle = i === this.opts.yAxis.grid.horizontalLines - 1\n                    ? getColor('gridBottomBorder')\n                    : getColor('gridLine');\n\n                this.ctx.moveTo(0, animY + this.opts.drawingFrame.y + 1);\n                this.ctx.lineTo(this.layer.el.clientWidth, animY + this.opts.drawingFrame.y + 1);\n                this.ctx.stroke();\n\n                this.ctx.textBaseline = 'top';\n                this.ctx.font = '.7em' + ' ' + 'Arial';\n                this.ctx.fillStyle = getColor('XYAxisLabels');\n                this.ctx.fillText(\n                    toHumanValue(this.minY + this.stepValY * (this.opts.yAxis.grid.horizontalLines - 1 - i)),\n                    0,\n                    animY - 15 + this.opts.drawingFrame.y\n                );\n            }\n        }\n\n        _frameAnimHandler () {\n            this.layer.clear();\n            this.layer._renderXYAxisLabels.call(this);\n        }\n    }\n\n    class PointsInfoHTMLComponent extends HTMLComponent {\n        NAME = 'points-info';\n        DAY_NAMES = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n        constructor() {\n            super();\n\n            this._values = []\n        }\n\n        whenCreate() {\n            this._values = [];\n        }\n\n        render ({x}) {\n            let date = new Date(x);\n            let weekDay = this.DAY_NAMES[date.getDay()];\n            let month = MONTH_NAMES[date.getMonth()];\n            let day = date.getDate();\n\n            return `\n                <div class=\"title\" style=\"color: ${getColor('pointsInfoTitle')}\">\n                   ${weekDay}, ${month} ${day}\n                </div>\n                <div class=\"values\">\n                    ${this._values.map(({yVal, lineName, color}) => `\n                        <div class=\"value\" style=\"color: ${color}\">\n                            <div>${toHumanValue(yVal)}</div>\n                            <div>${lineName}</div>\n                        </div>\n                    `).join('')}\n                </div>\n            `\n        }\n\n        onMouseOut () { }\n\n        whenCreated (el) {\n            el.style.backgroundColor = getColor('pointsInfoBackground');\n\n            this.el.addEventListener('mouseout', this.onMouseOut)\n        }\n\n        addVal ({yVal, lineName, color}) {\n            this._values.push({yVal, lineName, color});\n            this.rerender()\n        }\n\n        setPosition({left, right, top}) {\n            this.el.style.left = left;\n            this.el.style.right = right;\n            this.el.style.top = top;\n        }\n    }\n\n    class InfoLayer extends CanvasHTMLComponent {\n        constructor() {\n            super();\n\n            this._chartData = null;\n            this._pointsInfo = new PointsInfoHTMLComponent();\n        }\n\n        whenCreated(el, {chartData, opts}) {\n            super.whenCreated(el);\n\n            el.className = 'info';\n            this._chartData = chartData;\n\n            el.addEventListener('mousemove', this._mouseMoveHandler.bind(this, opts));\n            el.addEventListener('mouseout', this._mouseOutHandler.bind(this));\n\n            this._pointsInfo.onMouseOut = (e) => {\n                e.stopPropagation();\n\n                if (e.relatedTarget && !parentElementsHierarchy(e.relatedTarget).includes(this._pointsInfo.el)) {\n                    this.clear();\n                    this._pointsInfo.remove();\n                }\n            }\n        }\n\n        whenRendered(el, {chartData}) {\n            this._chartData = chartData;\n        }\n\n        _showInfo(chartData, opts, currXPos, points, lineIndex) {\n            for (let i = 0, leftPointMidDist, rightPointMidDist; i < points.length; i++) {\n                if (i > 0) {\n                    leftPointMidDist = (points[i][0] - points[i - 1][0]) * .5;\n                }\n                if (i < points.length - 1) {\n                    rightPointMidDist = (points[i + 1][0] - points[i][0]) * .5;\n                }\n\n                if (currXPos >= points[i][0] - leftPointMidDist && currXPos <= points[i][0] + rightPointMidDist) {\n                    if (this._firstPoint) {\n                        this._firstPoint = false;\n\n                        this.ctx2d.beginPath();\n                        this.ctx2d.lineWidth = 1;\n                        this.ctx2d.strokeStyle = getColor('verticalInfoLine');\n                        this.ctx2d.moveTo(points[i][0], 0);\n                        this.ctx2d.lineTo(points[i][0], this.el.clientHeight + opts.drawingFrame.height);\n                        this.ctx2d.stroke();\n\n                        if (this._pointsInfo.el) {\n                            // TODO: clear _values inside the component\n                            this._pointsInfo._values = [];\n                            this._pointsInfo.rerender({x: chartData.xData[i]})\n\n                        } else {\n                            this._pointsInfo.create(this.el.parentElement, {x: chartData.xData[i]});\n                        }\n                    }\n                    this._pointsInfo.addVal({\n                        yVal: chartData.yDatas[lineIndex][i],\n                        lineName: chartData.names[lineIndex],\n                        color: chartData.colors[lineIndex]\n                    });\n                    this._pointsInfo.setPosition({\n                        left: points[i][0] + 10 - this._pointsInfo.el.clientWidth * .5 + 'px',\n                        top: '10px'\n                    });\n\n                    this.ctx2d.beginPath();\n                    this.ctx2d.lineWidth = 2;\n                    this.ctx2d.strokeStyle = chartData.colors[lineIndex];\n                    this.ctx2d.fillStyle = getColor('background');\n                    this.ctx2d.arc(points[i][0], points[i][1], 4, 0, 2 * Math.PI);\n                    this.ctx2d.fill();\n                    this.ctx2d.stroke();\n                }\n            }\n        }\n\n        _mouseMoveHandler(opts, e) {\n            e.stopPropagation();\n\n            this.clear();\n\n            this._firstPoint = true;\n\n            drawPlot(\n                {\n                    x: opts.drawingFrame.x,\n                    y: opts.drawingFrame.y,\n                    width: this.el.clientWidth - opts.drawingFrame.x + opts.drawingFrame.width,\n                    height: this.el.clientHeight - opts.drawingFrame.y + opts.drawingFrame.height - 2\n                },\n                this._chartData,\n                this._showInfo.bind(this, this._chartData, opts, e.layerX)\n            );\n        }\n\n        _mouseOutHandler(e) {\n            e.stopPropagation();\n\n            if (e.relatedTarget && !parentElementsHierarchy(e.relatedTarget).includes(this._pointsInfo.el)) {\n                this.clear();\n                this._pointsInfo.remove();\n            }\n        }\n    }\n\n    class PlotLayer extends CanvasHTMLComponent {\n        constructor() {\n            super();\n\n            this.renderedChartData = [];\n            this._anim = new Animation(this._frameAnimHandler);\n        }\n\n        whenCreated(el) {\n            super.whenCreated(el);\n\n            el.className = 'plot';\n        }\n\n        whenRendered(el, {chartData, opts, animate}) {\n            this._anim.start(\n                {\n                    renderedChartData: this.renderedChartData,\n                    anim: this._anim,\n                    ctx: this.ctx2d,\n                    layer: this,\n                    chartData,\n                    opts,\n                    animate\n                },\n                800\n            );\n        }\n\n        _frameAnimHandler() {\n            this.layer.clear();\n\n            let lineWidth = 2;\n\n            drawPlot(\n                {\n                    x: this.opts.drawingFrame.x,\n                    y: this.opts.drawingFrame.y,\n                    width: this.layer.el.clientWidth - this.opts.drawingFrame.x + this.opts.drawingFrame.width,\n                    height: this.layer.el.clientHeight - this.opts.drawingFrame.y + this.opts.drawingFrame.height - lineWidth\n                },\n                this.chartData,\n                drawingPlotFunc.bind(this)\n            );\n\n            function drawingPlotFunc(points, lineIndex) {\n                this.ctx.beginPath();\n                this.ctx.lineWidth = lineWidth;\n                this.ctx.strokeStyle = this.chartData.colors[lineIndex];\n\n                for (let i = 0, x, y; i < points.length; i++) {\n                    x = points[i][0];\n                    y = points[i][1];\n\n                    let yr;\n                    if (this.animate) {\n                        let prevY = 0;\n                        if (this.renderedChartData[lineIndex] !== undefined) {\n                            if (this.renderedChartData[lineIndex][i] !== undefined) {\n                                prevY = this.renderedChartData[lineIndex][i];\n                            }\n                        }\n                        if (y < prevY) {\n                            yr = prevY - this.anim.easeOutExpo(this.progress, 0, prevY - y, this.duration);\n                        } else {\n                            yr = this.anim.easeOutExpo(this.progress, prevY, y - prevY, this.duration);\n                        }\n                    } else {\n                        yr = y\n                    }\n                    if (this.renderedChartData[lineIndex] === undefined) {\n                        this.renderedChartData[lineIndex] = [yr];\n                    } else {\n                        this.renderedChartData[lineIndex][i] = yr;\n                    }\n                    this.ctx.lineTo(x, yr)\n                }\n                this.ctx.stroke();\n            }\n        }\n    }\n\n    class ZoomCarriage extends HTMLComponent {\n        NAME = 'zoom-carriage';\n\n        constructor() {\n            super();\n\n            this._currVisibilityFrame = null;\n            this._moveIsActive = false;\n            this._startStretchXPos = null;\n            this._initProps = {};\n            this._leftStretch = null;\n            this._rightStretch = null;\n            this._leftStretchIsActive = false;\n            this._rightStretchIsActive = false;\n        }\n\n        render() {\n            return `\n                <div class=\"left-stretch\"></div>\n                <div class=\"right-stretch\"></div>\n            `\n        }\n\n        get visibilityFrame() {\n            let from = this.el.offsetLeft / this.parent.el.clientWidth,\n                to = from + this.el.clientWidth / this.parent.el.clientWidth;\n            return [from, to];\n        }\n\n        whenVisibilityChanged(visibilityFrame) {}\n\n        whenCreated(el, {opts}) {\n            let color = getColor('zoomCarriageTool');\n\n            el.style.borderTopColor = color;\n            el.style.borderBottomColor = color;\n\n            this._leftStretch = el.getElementsByClassName('left-stretch')[0];\n            this._leftStretch.style.backgroundColor = color;\n\n            this._rightStretch = el.getElementsByClassName('right-stretch')[0];\n            this._rightStretch.style.backgroundColor = color;\n\n            addEventListeners(window, 'mousemove touchmove', this._windowMouseMoveHandler.bind(this));\n            addEventListeners(window, 'mouseup touchend', this._windowMouseUpHandler.bind(this));\n            addEventListeners(el, 'mousedown touchstart', this._mouseDownHandler.bind(this));\n            addEventListeners(this._leftStretch, 'mousedown touchstart', this._stretchMouseDownHandler.bind(this));\n            addEventListeners(this._rightStretch, 'mousedown touchstart', this._stretchMouseDownHandler.bind(this));\n\n            this.whenVisibilityChanged(this._currVisibilityFrame || this.visibilityFrame)\n        }\n\n        getRightShift() {\n            return parseFloat(this.el.style.right) || 0;\n        }\n\n        _windowMouseMoveHandler(e) {\n            let x = e.screenX;\n            if (e instanceof TouchEvent) {\n                x = e.changedTouches[0].screenX\n            }\n            let dist = this._startStretchXPos - x;\n\n            if (this._moveIsActive) {\n                this._move(dist);\n                return\n            }\n            if (this._leftStretchIsActive) {\n                this._moveLeftStretch(dist);\n                return;\n            }\n            if (this._rightStretchIsActive) {\n                this._moveRightStretch(dist)\n            }\n        }\n\n        _windowMouseUpHandler() {\n            this._moveIsActive = false;\n            this._leftStretchIsActive = false;\n            this._rightStretchIsActive = false;\n        }\n\n        _mouseDownHandler(e) {\n            e.stopPropagation();\n\n            let x = e.screenX;\n            if (e instanceof TouchEvent) {\n                x = e.touches[0].screenX\n            }\n            this._moveIsActive = true;\n            this._startStretchXPos = x;\n            this._initProps.right = this.getRightShift();\n            this._initProps.width = this.el.clientWidth;\n        }\n\n        _stretchMouseDownHandler(e) {\n            e.stopPropagation();\n\n            let x = e.screenX;\n            if (e instanceof TouchEvent) {\n                x = e.touches[0].screenX\n            }\n            if (e.target === this._leftStretch) {\n                this._leftStretchIsActive = true;\n\n            } else if (e.target === this._rightStretch) {\n                this._rightStretchIsActive = true;\n            }\n            this._startStretchXPos = x;\n\n            this._initProps.right = this.getRightShift();\n            this._initProps.width = this.el.clientWidth;\n            this._initProps.left = this.el.offsetLeft;\n        }\n\n        _setProps({width, right}) {\n            if (width) {\n                this.el.style.width = width;\n            }\n            if (right) {\n                this.el.style.right = right;\n            }\n            this._currVisibilityFrame = this.visibilityFrame;\n\n            this.whenVisibilityChanged(this.visibilityFrame);\n        }\n\n        _move(dist) {\n            let newRight = (this._initProps.right || 0) + dist;\n\n            if (newRight >= 0 && newRight <= this.parent.el.clientWidth - (this._initProps.width || this.el.clientWidth)) {\n                this._setProps({right: newRight + 'px'});\n            }\n        }\n\n        _moveLeftStretch(dist) {\n            let newWidth = (this._initProps.width || this.el.clientWidth) + dist;\n\n            if (newWidth >= 135 && newWidth <= this.parent.el.clientWidth - (this._initProps.right || this.getRightShift())) {\n                this._setProps({width: newWidth + 'px'});\n            }\n        }\n\n        _moveRightStretch(dist) {\n            let newRight = (this._initProps.right || this.getRightShift()) + dist;\n\n            if (newRight >= 0 && this.parent.el.clientWidth - (this._initProps.left || this.el.offsetLeft) - 135 >= newRight) {\n                let newWidth = (this._initProps.width || this.el.clientWidth) - dist;\n\n                this._setProps({\n                    right: newRight + 'px',\n                    width: newWidth + 'px'\n                });\n            }\n        }\n    }\n\n    class ZoomPlot extends CanvasHTMLComponent{\n        whenRendered(el, {chartData, opts}) {\n            let lineWidth = 1;\n\n            this.clear();\n\n            drawPlot(\n                {\n                    x: 0,\n                    y: lineWidth,\n                    width: this.el.clientWidth,\n                    height: this.el.clientHeight - lineWidth\n                },\n                chartData,\n                (points, lineIndex) => {\n                    this.ctx2d.beginPath();\n                    this.ctx2d.lineWidth = lineWidth;\n                    this.ctx2d.strokeStyle = chartData.colors[lineIndex];\n\n                    for (let i = 0; i < points.length; i++) {\n                        this.ctx2d.lineTo(points[i][0], points[i][1])\n                    }\n                    this.ctx2d.stroke();\n                }\n            );\n        }\n    }\n\n    class Zoom extends HTMLComponent {\n        NAME = 'zoom';\n\n        constructor() {\n            super();\n\n            this._plot = new ZoomPlot();\n            this._overlay = new CanvasHTMLComponent();\n            this._zoomCarriage = new ZoomCarriage();\n        }\n\n        render({chartData, opts}) {\n            this._zoomCarriage.whenVisibilityChanged = this._whenVisibilityChanged.bind(this);\n\n            return `\n                ${this._plot.create(this, {chartData, opts})}\n                ${this._overlay.create(this, {chartData, opts})}\n                ${this._zoomCarriage.create(this, {chartData, opts})}\n            `\n        }\n\n        get visibilityFrame() {\n            return this._zoomCarriage.visibilityFrame\n        }\n\n        whenVisibilityChanged(visibilityFrame) {}\n\n        _whenVisibilityChanged(visibilityFrame) {\n            this._renderOverlay();\n\n            this.whenVisibilityChanged(visibilityFrame);\n        }\n\n        _renderOverlay() {\n            this._overlay.clear();\n\n            this._overlay.ctx2d.fillStyle = getColor('zoomOverlay');\n            this._overlay.ctx2d.fillRect(0, 0, this._zoomCarriage.el.offsetLeft, this._overlay.el.clientHeight);\n\n            let zoomCarriageRightShift = this._zoomCarriage.getRightShift();\n            this._overlay.ctx2d.fillRect(\n                this._overlay.el.clientWidth - zoomCarriageRightShift,\n                0,\n                zoomCarriageRightShift,\n                this._overlay.el.clientHeight);\n        }\n    }\n\n    class LegendItem extends HTMLComponent {\n        NAME = 'li';\n\n        constructor () {\n            super();\n\n            this._lineIndex = null;\n            this._visible = true;\n        }\n\n        render ({name, color, lineIndex}) {\n            this._lineIndex = lineIndex;\n\n            let styleObj = {\n                backgroundColor: color,\n                borderColor: color\n            };\n            if (!this._visible) {\n                styleObj.maskImage = 'unset';\n                styleObj.webkitMaskImage = 'unset';\n                styleObj.backgroundColor = 'none';\n            }\n            return `\n                <div class=\"state\" style=\"${style(styleObj)}\"></div>\n                <div class=\"name\" style=\"color: ${getColor('legendItemName')}\">${name}</div>\n            `\n        }\n\n        whenStateChanged (lineIndex, visible) { }\n\n        whenCreated (el) {\n            el.style.borderColor = getColor('legendItemBorder');\n\n            el.addEventListener('click', () => {\n                this._visible = !this._visible;\n                this.rerender();\n                this.whenStateChanged(this._lineIndex, this._visible)\n            })\n        }\n    }\n\n    class Legend extends HTMLComponent {\n        NAME = 'ul';\n\n        constructor() {\n            super();\n\n            this._lines = [];\n        }\n\n        render({chartData, opts}) {\n            return `\n               ${this._lines.map(({name, color}, lineIndex) => {\n                   let legendItem =  new LegendItem();\n                   legendItem.whenStateChanged = this.whenLegendItemStateChanged;\n                   return legendItem.create(this, {name, color, lineIndex})\n                }).join('')} \n            `\n        }\n\n        whenLegendItemStateChanged (lineIndex, visible) { }\n\n        whenCreated(el, {chartData}) {\n            el.className = 'legend';\n        }\n\n        addLine({name, color}) {\n            this._lines.push({name, color});\n            this.rerender()\n        }\n    }\n\n    class Chart extends HTMLComponent {\n        NAME = 'chart';\n\n        constructor() {\n            super();\n\n            this._yAxisLayer = new YAxisLayer();\n            this._xAxisLayer = new XAxisLayer();\n            this._plotLayer = new PlotLayer();\n            this._infoLayer = new InfoLayer();\n\n            this._zoom = new Zoom();\n            this._legend = new Legend();\n        }\n\n        render({chartData, opts}) {\n            let currVisibilityFrame,\n                visibilityChangedTimer,\n                lastVisibleChartData = {minY: null, maxY: null};\n\n            this._zoom.whenVisibilityChanged = (visibilityFrame) => {\n                currVisibilityFrame = visibilityFrame;\n\n                this._render(chartData, opts, lastVisibleChartData, visibilityFrame, false);\n\n                if (visibilityChangedTimer) {\n                    clearTimeout(visibilityChangedTimer);\n                }\n                visibilityChangedTimer = setTimeout(() => {\n                    this._render(chartData, opts, lastVisibleChartData, visibilityFrame, true, true)\n                }, 100);\n            };\n\n            this._legend.whenLegendItemStateChanged = (lineIndex, visible) => {\n                chartData.yDatas[lineIndex].visible = visible;\n\n                this._zoom._plot.rerender({chartData, opts: opts.zoom});\n                this._render(chartData, opts, lastVisibleChartData, currVisibilityFrame, true, true)\n            };\n\n            return `\n                ${this._plotLayer.create(this, {chartData, opts})}\n                ${this._yAxisLayer.create(this, {chartData, opts})}\n                ${this._xAxisLayer.create(this, {chartData, opts})}\n                ${this._infoLayer.create(this, {chartData, opts})}\n                ${this._zoom.create(this, {chartData, opts: opts.zoom})}\n                ${this._legend.create(this, {chartData, opts})}\n            `\n        }\n\n        whenCreated(el, {chartData}) {\n            chartData.names.forEach((name, i) => {\n                this._legend.addLine({name, color: chartData.colors[i]})\n            });\n        }\n\n        _render (chartData, opts, lastVisibleChartData, visibilityFrame, recalculateMinMaxY=true, animate=false) {\n            let xl = chartData.xData.length,\n            visibleXData = chartData.xData.slice(xl * visibilityFrame[0], xl * visibilityFrame[1]),\n            minMaxValX = minMax(visibleXData);\n\n            let visibleChartData = {\n                xData: visibleXData,\n                yDatas: [],\n                minValX: minMaxValX[0],\n                maxValX: minMaxValX[1],\n                minY: null,\n                maxY: null,\n                colors: [],\n                names: chartData.names\n            };\n\n            for (let lineIndex = 0, visibleData, pointsYLen; lineIndex < chartData.yDatas.length; lineIndex++) {\n                if (chartData.yDatas[lineIndex].visible === false) {\n                    continue\n                }\n                visibleChartData.colors.push(chartData.colors[lineIndex]);\n\n                pointsYLen = chartData.yDatas[lineIndex].length;\n                visibleData = chartData.yDatas[lineIndex].slice(\n                    pointsYLen * visibilityFrame[0],\n                    pointsYLen * visibilityFrame[1]\n                );\n                visibleChartData.yDatas.push(visibleData);\n\n                if (recalculateMinMaxY) {\n                    let mm = minMax(visibleData);\n                    visibleChartData.minY = visibleChartData.minY === null\n                        ? mm[0]\n                        : Math.min(visibleChartData.minY, mm[0]);\n\n                    visibleChartData.maxY = visibleChartData.maxY === null\n                        ? mm[1]\n                        : Math.max(visibleChartData.maxY, mm[1]);\n                }\n            }\n\n            if (visibleChartData.minY == null) {\n                visibleChartData.minY = visibleChartData.minY || lastVisibleChartData.minY || chartData.minY;\n            }\n            if (visibleChartData.maxY == null) {\n                visibleChartData.maxY = visibleChartData.maxY || lastVisibleChartData.maxY || chartData.maxY;\n            }\n            lastVisibleChartData.minY = visibleChartData.minY;\n            lastVisibleChartData.maxY = visibleChartData.maxY;\n\n            this._yAxisLayer.rerender({chartData: visibleChartData, opts});\n            this._xAxisLayer.rerender({chartData: visibleChartData, opts});\n            this._plotLayer.rerender({chartData: visibleChartData, opts, animate});\n            this._infoLayer.rerender({chartData: visibleChartData, opts});\n        }\n    }\n\n    return {\n        configure: configure,\n        setData: setData,\n        switchMode: switchMode,\n        isNightMode: isNightMode,\n    };\n\n    function configure(val) {\n        config = Object.assign(config, val);\n    }\n\n    function setData(data) {\n        if (!Array.isArray(data)) {\n            throw new TypeError('Data for the TChart can be Array type only')\n        }\n        // to re-render the scene without the passing data always\n        rerender = render.bind(null, data);\n        fullrerender = rerender.bind(null, {\n            drawingFrame: {\n                x: 0,\n                y: 10,\n                width: 0,\n                height: -20\n            },\n            yAxis: {\n                text: {\n                    fontSize: '.7em',\n                    fontFamily: 'Arial'\n                },\n                grid: {\n                    horizontalLines: 5,\n                    lineWidth: .3\n                }\n            }\n        });\n        fullrerender();\n    }\n\n    function switchMode() {\n        config.nightMode = !config.nightMode;\n        fullrerender();\n    }\n\n    function isNightMode() {\n        return config.nightMode;\n    }\n\n    function getColor(name) {\n        return config.nightMode ? colorsMap.night[name] : colorsMap.day[name]\n    }\n\n    function prepareChartData(chartData) {\n        let xData, yDatas = [], minMaxXData, minY, maxY, colors = [], names = [];\n\n        for (let columnIndex = 0; columnIndex < chartData.columns.length; columnIndex++) {\n            let columnData = chartData.columns[columnIndex];\n\n            if (!Array.isArray(columnData)) {\n                throw new TypeError('Column data can be only Array type')\n            }\n            if (!columnData.length) {\n                throw new Error('Column data cannot be empty')\n            }\n            let columnName = columnData[0],\n                columnType = chartData.types[columnName];\n\n            if (!columnType) {\n                throw new TypeError('Column type for a column by ref\"' + columnName + '\" was not defined')\n            }\n            if (![LINE_COLUMN_TYPE, X_COLUMN_TYPE].includes(columnType)) {\n                throw new Error('Column type \"' + columnType + '\" does not supported')\n            }\n            if (columnType === X_COLUMN_TYPE) {\n                if (xData) {\n                    throw new Error('Column type \"X\" can be only one')\n                }\n                xData = columnData.slice(1); // remove column type from data\n                minMaxXData = minMax(xData);\n\n            } else {\n                let yData = columnData.slice(1); // remove column type from data\n                let minMaxYData = minMax(yData);\n                minY = minY === undefined ? minMaxYData[0]: Math.min(minY, minMaxYData[0]);\n                maxY = maxY === undefined ? minMaxYData[1]: Math.max(maxY, minMaxYData[1]);\n\n                yDatas.push(yData);\n                // meta\n                colors.push(chartData.colors[columnName]);\n                names.push(chartData.names[columnName]);\n            }\n        }\n\n        return {\n            xData: xData,\n            yDatas: yDatas,\n            names: names,\n            colors: colors,\n            minValX: minMaxXData[0],\n            maxValX: minMaxXData[1],\n            minY: minY,\n            maxY: maxY\n        }\n    }\n\n    function render(data, opts) {\n        let chartsContainer = document.getElementById(config.containerId);\n        if (!chartsContainer) {\n            throw new Error('Charts container by ID \"' + config.containerId + '\" was not found');\n        }\n        document.body.className = config.nightMode ? 'night-mode' : '';\n        chartsContainer.innerHTML = '';\n\n        for (let i = 0; i < data.length; i++) {\n            (new Chart()).create(\n                chartsContainer,\n                {chartData: prepareChartData(data[i]), opts});\n        }\n    }\n\n    /**\n     * @param {Object} canvas - Canvas HTML element\n     * @param {Object} drawingFrame\n     * @param {Array} data\n     * @param {Number} minValX\n     * @param {Number} maxValX\n     * @param {function} callback\n     */\n    function bypassXPoints(canvas, drawingFrame, data, minValX, maxValX, callback) {\n        let width = canvas.clientWidth - drawingFrame.x + drawingFrame.width,\n            compressionRatioX = width / (maxValX - minValX);\n\n        for (let i = 0; i < data.length; i++) {\n            let x = drawingFrame.x + (data[i] - minValX) * compressionRatioX;\n            callback(data[i], x)\n        }\n    }\n\n    /**\n     * Draw the plot in the specific area somewhere you want\n     * @param {{x: number, y: number, width: number, height: number}} areaMetric -\n     * @param {Object} chartData\n     * @param {function} drawingFunc\n     */\n    function drawPlot(areaMetric, chartData, drawingFunc) {\n        let compressionRatioX = areaMetric.width / (chartData.maxValX - chartData.minValX),\n            compressionRatioY = areaMetric.height / (chartData.maxY - chartData.minY);\n\n        for (let lineIndex = 0, points; lineIndex < chartData.yDatas.length; lineIndex++) {\n            if (chartData.yDatas[lineIndex].visible === false) {\n                continue\n            }\n            points = [];\n            for (let yIndex = 0; yIndex < chartData.yDatas[lineIndex].length; yIndex++) {\n                points.push([\n                    areaMetric.x + (chartData.xData[yIndex] - chartData.minValX) * compressionRatioX,\n                    // areaMetric.height - inversion by Y\n                    areaMetric.y + areaMetric.height - (\n                        chartData.yDatas[lineIndex][yIndex] - chartData.minY\n                    ) * compressionRatioY\n                ])\n            }\n            drawingFunc(points, lineIndex);\n        }\n    }\n\n    function Animation(frameHandler) {\n        let reqAnimId, onFinishedCallback = function() { };\n\n        return {\n            start: start,\n            easeOutExpo: easeOutExpo,\n            onFinished: onFinished\n        };\n\n        function onFinished(callback) {\n            onFinishedCallback = callback\n        }\n\n        function start(context, duration) {\n            context = context || {};\n\n            let startAnimTime;\n\n            if (reqAnimId) {\n                cancelAnimationFrame(reqAnimId);\n            }\n            reqAnimId = requestAnimationFrame(frame);\n            return this;\n\n            function frame(timestamp) {\n                if (!startAnimTime) {\n                    startAnimTime = timestamp;\n                }\n                context.progress = timestamp - startAnimTime;\n                context.duration = duration;\n\n                frameHandler.call(context);\n\n                if (context.progress < duration) {\n                    reqAnimId = requestAnimationFrame(frame)\n                } else {\n                    reqAnimId = null;\n                    onFinishedCallback();\n                }\n            }\n        }\n\n        function easeOutExpo (t, b, c, d) {\n            return c * (-Math.pow(2, -10 * t / d) + 1) * 1024 / 1023 + b;\n        }\n    }\n\n    function minMax(data) {\n        let min, max;\n\n        for (let i = 0; i < data.length; i++) {\n            if (min === undefined || min > data[i]) {\n                min = data[i]\n            }\n            if (max === undefined || max < data[i]) {\n                max = data[i]\n            }\n        }\n        return [min, max];\n    }\n\n    function toHumanValue(v) {\n        if (v >= 1000000000) {\n            return (v / 1000000000).toFixed(2) + 'G';\n\n        } else if (v >= 1000000) {\n            return (v / 1000000).toFixed(2) + 'M';\n\n        } else if (v >= 1000) {\n            return (v / 1000).toFixed(2) + 'K';\n        }\n        return v > 0 ? v.toFixed(2) : v;\n    }\n\n    function parentElementsHierarchy(e, parents = []) {\n        parents.push(e);\n\n        if (e.parentElement) {\n            parentElementsHierarchy(e.parentElement, parents)\n        }\n        return parents\n    }\n})();\n"],"file":"tchart.js"}